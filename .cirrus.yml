
env:
  CACHIX_AUTH_TOKEN: ENCRYPTED[!dcaeae1286059bec7770e082fd6f3ba7688e548b5f652673973329068380578d8cbfa21ab8b19f1532c8a2824b3faf46!]
  # Save some traffic by excluding the full git history
  CIRRUS_CLONE_DEPTH: "1"
  CIRRUS_SHELL: "/bin/bash"
  INPUT_EXTRA_NIX_CONFIG: "sandbox = false"
  INPUT_INSTALL_OPTIONS: ""
  INPUT_INSTALL_URL: ""
  INPUT_NIX_PATH: ""
  USER: "root"
  HOME: "/$USER"
  PATH: "/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/per-user/$USER/profile/bin:$PATH"

linux_amd64_task:
  name: Build Linux amd64
  timeout_in: 120m

  container:
    # Defined in https://github.com/nix-community/docker-nixpkgs
    # image: nixpkgs/cachix-flakes:nixos-22.05
    image: ubuntu:20.04
    cpu: 4
    memory: 8G

  prepare_container_env_script:
  - apt update
  - apt -y install sudo curl xz-utils
  install_nix_script: ./.ci/install-nix.sh
  prepare_nix_env_script:
  - nix-env -iA cachix -f https://cachix.org/api/v1/install
  # TODO pin or something
  - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
  - nix-channel --update
  - nix-env -iA nixpkgs.git
  prepare_cachix_script:
  - echo $CACHIX_AUTH_TOKEN | cachix authtoken --stdin
  - cachix use nix-community
  - cachix use mic92
  - cachix use nrdxp

  cachix_watch_background_script: while true; do cachix watch-store truelecter || true; done

  build_script:
  - git config --global --add safe.directory "$(pwd)"
  - nix build -j1 '.#nixosConfigurations.nas.config.system.build.toplevel'

linux_aarch64_task:
  name: Build Linux aarch64
  # Use the maximum timeout. Needed when rebuilding packages on a channel update.
  timeout_in: 120m

  arm_container:
    # Defined in https://github.com/nix-community/docker-nixpkgs
    # image: nixpkgs/cachix-flakes:nixos-22.05
    image: ubuntu:20.04
    cpu: 4
    memory: 8G

  prepare_container_env_script:
  - apt update
  - apt -y install sudo curl xz-utils openssh-server
  # required for sshd.conf-validated
  - mkdir -p /var/empty
  install_nix_script: ./.ci/install-nix.sh
  prepare_nix_env_script:
  - nix-env -iA cachix -f https://cachix.org/api/v1/install
  # TODO pin or something
  - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
  - nix-channel --update
  - nix-env -iA nixpkgs.git
  prepare_cachix_script:
  - echo $CACHIX_AUTH_TOKEN | cachix authtoken --stdin
  - cachix use nix-community
  - cachix use mic92
  - cachix use nrdxp

  cachix_watch_background_script: while true; do cachix watch-store truelecter || true; done

  build_script:
  - git config --global --add safe.directory "$(pwd)"
  - until nix build '.#nixosConfigurations.octoprint.config.system.build.toplevel'; do echo retrying...; done
